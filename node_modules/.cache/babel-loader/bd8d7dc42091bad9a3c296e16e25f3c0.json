{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/git-hub/react-begin/src/App2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport UserList from './UserList2';\nimport CreateUser2 from './CreateUser2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App2() {\n  _s();\n\n  const users = [{\n    id: 1,\n    username: 'velopert',\n    email: 'public.velopert@gmail.com'\n  }, {\n    id: 2,\n    username: 'tester',\n    email: 'tester@example.com'\n  }, {\n    id: 3,\n    username: 'liz',\n    email: 'liz@example.com'\n  }];\n  const nextId = useRef(4);\n\n  const onCreate = () => {\n    // 나중에 구현 할 배열에 항목 추가하는 로직\n    // ...\n    nextId.current += 1;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"App2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App2, \"8Ki10oRx7tglSX8xsQD9cibzOZw=\");\n\n_c = App2;\nexport default App2;\n\nvar _c;\n\n$RefreshReg$(_c, \"App2\");","map":{"version":3,"names":["React","useRef","UserList","CreateUser2","App2","users","id","username","email","nextId","onCreate","current"],"sources":["/Users/apple/Desktop/git-hub/react-begin/src/App2.js"],"sourcesContent":["import React, { useRef } from 'react';\n\nimport UserList from './UserList2';\nimport CreateUser2 from './CreateUser2';\n\nfunction App2() {\n  const users = [\n    {\n      id: 1,\n      username: 'velopert',\n      email: 'public.velopert@gmail.com'\n    },\n    {\n      id: 2,\n      username: 'tester',\n      email: 'tester@example.com'\n    },\n    {\n      id: 3,\n      username: 'liz',\n      email: 'liz@example.com'\n    }\n  ];\n\n  const nextId = useRef(4);\n  const onCreate = () => {\n    // 나중에 구현 할 배열에 항목 추가하는 로직\n    // ...\n\n    nextId.current += 1;\n  };\n\n  return (\n      <>\n        <span>App2</span>\n        <UserList users={users} />\n      </>\n  );\n}\n\nexport default App2;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AAEA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EACd,MAAMC,KAAK,GAAG,CACZ;IACEC,EAAE,EAAE,CADN;IAEEC,QAAQ,EAAE,UAFZ;IAGEC,KAAK,EAAE;EAHT,CADY,EAMZ;IACEF,EAAE,EAAE,CADN;IAEEC,QAAQ,EAAE,QAFZ;IAGEC,KAAK,EAAE;EAHT,CANY,EAWZ;IACEF,EAAE,EAAE,CADN;IAEEC,QAAQ,EAAE,KAFZ;IAGEC,KAAK,EAAE;EAHT,CAXY,CAAd;EAkBA,MAAMC,MAAM,GAAGR,MAAM,CAAC,CAAD,CAArB;;EACA,MAAMS,QAAQ,GAAG,MAAM;IACrB;IACA;IAEAD,MAAM,CAACE,OAAP,IAAkB,CAAlB;EACD,CALD;;EAOA,oBACI;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,QAAD;MAAU,KAAK,EAAEN;IAAjB;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADJ;AAMD;;GAjCQD,I;;KAAAA,I;AAmCT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}