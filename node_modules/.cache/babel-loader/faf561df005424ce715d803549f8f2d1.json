{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/git-clone/react-begin/src/App2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport UserList2 from './UserList2';\nimport CreateUser2 from './CreateUser2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App2() {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    username: '',\n    email: ''\n  });\n  const {\n    username,\n    email\n  } = inputs;\n\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs({ ...inputs,\n      [name]: value\n    });\n  };\n\n  const [users, setUsers] = useState([{\n    id: 1,\n    username: 'velopert',\n    email: 'public.velopert@gmail.com'\n  }, {\n    id: 2,\n    username: 'tester',\n    email: 'tester@example.com'\n  }, {\n    id: 3,\n    username: 'liz',\n    email: 'liz@example.com'\n  }]);\n  const nextId = useRef(4);\n\n  const onCreate = () => {\n    const user = {\n      id: nextId.current,\n      username,\n      email\n    };\n    setUsers([...users, user]);\n    setInputs({\n      username: '',\n      email: ''\n    });\n    nextId.current += 1;\n  };\n\n  const onRemove = id => {\n    // user.id 가 파라미터로 일치하지 않는 원소만 추출해서 새로운 배열을 만듬\n    // = user.id 가 id 인 것을 제거함\n    setUsers(users.filter(user => user.id !== id));\n  };\n\n  const onToggle = id => {\n    setUsers(users.map(user => user.id === id ? { ...user,\n      active: !user.active\n    } : user));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser2, {\n      username: username,\n      email: email,\n      onChange: onChange,\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList2, {\n      users: users,\n      onRemove: onRemove,\n      onToggle: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App2, \"WCj/a2FtwDi3T2evQw/WpmFbuao=\");\n\n_c = App2;\nexport default App2;\n\nvar _c;\n\n$RefreshReg$(_c, \"App2\");","map":{"version":3,"names":["React","useRef","useState","UserList2","CreateUser2","App2","inputs","setInputs","username","email","onChange","e","name","value","target","users","setUsers","id","nextId","onCreate","user","current","onRemove","filter","onToggle","map","active"],"sources":["/Users/apple/Desktop/git-clone/react-begin/src/App2.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport UserList2 from './UserList2';\nimport CreateUser2 from './CreateUser2';\n\nfunction App2() {\n    \n  const [inputs, setInputs] = useState({\n    username: '',\n    email: ''\n  });\n\n  const { username, email } = inputs;\n\n  const onChange = e => {\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value\n    });\n  };\n\n  const [users, setUsers] = useState([\n    {\n      id: 1,\n      username: 'velopert',\n      email: 'public.velopert@gmail.com'\n    },\n    {\n      id: 2,\n      username: 'tester',\n      email: 'tester@example.com'\n    },\n    {\n      id: 3,\n      username: 'liz',\n      email: 'liz@example.com'\n    }\n  ]);\n\n  const nextId = useRef(4);\n  const onCreate = () => {\n    const user = {\n        id: nextId.current,\n        username,\n        email\n      };\n    setUsers([...users, user]);\n\n    setInputs({\n      username: '',\n      email: ''\n    });\n    nextId.current += 1;\n  };\n\n  const onRemove = id => {\n    // user.id 가 파라미터로 일치하지 않는 원소만 추출해서 새로운 배열을 만듬\n    // = user.id 가 id 인 것을 제거함\n    setUsers(users.filter(user => user.id !== id));\n  };\n\n  const onToggle = id => {\n    setUsers(\n      users.map(user => \n        user.id === id ? { ...user, active: !user.active } : user\n      )\n    );\n  };\n\n  return (\n    <>\n      <CreateUser2\n        username={username}\n        email={email}\n        onChange={onChange}\n        onCreate={onCreate}\n      />\n      <UserList2 users={users} onRemove={onRemove} onToggle={onToggle}/>\n    </>\n  );\n}\n\nexport default App2;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EAEd,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;IACnCM,QAAQ,EAAE,EADyB;IAEnCC,KAAK,EAAE;EAF4B,CAAD,CAApC;EAKA,MAAM;IAAED,QAAF;IAAYC;EAAZ,IAAsBH,MAA5B;;EAEA,MAAMI,QAAQ,GAAGC,CAAC,IAAI;IACpB,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAkBF,CAAC,CAACG,MAA1B;IACAP,SAAS,CAAC,EACR,GAAGD,MADK;MAER,CAACM,IAAD,GAAQC;IAFA,CAAD,CAAT;EAID,CAND;;EAQA,MAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CACjC;IACEe,EAAE,EAAE,CADN;IAEET,QAAQ,EAAE,UAFZ;IAGEC,KAAK,EAAE;EAHT,CADiC,EAMjC;IACEQ,EAAE,EAAE,CADN;IAEET,QAAQ,EAAE,QAFZ;IAGEC,KAAK,EAAE;EAHT,CANiC,EAWjC;IACEQ,EAAE,EAAE,CADN;IAEET,QAAQ,EAAE,KAFZ;IAGEC,KAAK,EAAE;EAHT,CAXiC,CAAD,CAAlC;EAkBA,MAAMS,MAAM,GAAGjB,MAAM,CAAC,CAAD,CAArB;;EACA,MAAMkB,QAAQ,GAAG,MAAM;IACrB,MAAMC,IAAI,GAAG;MACTH,EAAE,EAAEC,MAAM,CAACG,OADF;MAETb,QAFS;MAGTC;IAHS,CAAb;IAKAO,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWK,IAAX,CAAD,CAAR;IAEAb,SAAS,CAAC;MACRC,QAAQ,EAAE,EADF;MAERC,KAAK,EAAE;IAFC,CAAD,CAAT;IAIAS,MAAM,CAACG,OAAP,IAAkB,CAAlB;EACD,CAbD;;EAeA,MAAMC,QAAQ,GAAGL,EAAE,IAAI;IACrB;IACA;IACAD,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAaH,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAAjC,CAAD,CAAR;EACD,CAJD;;EAMA,MAAMO,QAAQ,GAAGP,EAAE,IAAI;IACrBD,QAAQ,CACND,KAAK,CAACU,GAAN,CAAUL,IAAI,IACZA,IAAI,CAACH,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGG,IAAL;MAAWM,MAAM,EAAE,CAACN,IAAI,CAACM;IAAzB,CAAjB,GAAqDN,IADvD,CADM,CAAR;EAKD,CAND;;EAQA,oBACE;IAAA,wBACE,QAAC,WAAD;MACE,QAAQ,EAAEZ,QADZ;MAEE,KAAK,EAAEC,KAFT;MAGE,QAAQ,EAAEC,QAHZ;MAIE,QAAQ,EAAES;IAJZ;MAAA;MAAA;MAAA;IAAA,QADF,eAOE,QAAC,SAAD;MAAW,KAAK,EAAEJ,KAAlB;MAAyB,QAAQ,EAAEO,QAAnC;MAA6C,QAAQ,EAAEE;IAAvD;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA,gBADF;AAWD;;GA5EQnB,I;;KAAAA,I;AA8ET,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}