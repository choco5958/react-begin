{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/git-hub/react-begin/src/App2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useMemo, useCallback, useReducer } from 'react';\nimport UserList from './UserList2';\nimport CreateUser from './CreateUser2';\nimport CreateUser2 from './CreateUser2';\nimport UserList2 from './UserList2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자 수를 세는중...');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  inputs: {\n    username: '',\n    email: ''\n  },\n  users: [{\n    id: 1,\n    username: 'velopert',\n    email: 'public.velopert@gmail.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'tester',\n    email: 'tester@example.com',\n    active: false\n  }, {\n    id: 3,\n    username: 'liz',\n    email: 'liz@example.com',\n    active: false\n  }]\n};\n\nfunction reducer2(state, action) {\n  switch (action.type) {\n    case 'CHANGE_INPUT':\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.name]: action.value\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction App2() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer2, initialState);\n  const {\n    users\n  } = state;\n  const {\n    username,\n    email\n  } = state.inputs;\n  const onChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    dispatch({\n      type: 'CHANGE_INPUT',\n      name,\n      value\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser2, {\n      username: username,\n      email: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList2, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uD65C\\uC131\\uC0AC\\uC6A9\\uC790 \\uC218 : 0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} // function App2() {\n//   const [inputs, setInputs] = useState({\n//     username: '',\n//     email: ''\n//   });\n//   const { username, email } = inputs;\n//   const onChange = useCallback(e => {\n//     const { name, value } = e.target;\n//     setInputs(inputs => ({\n//       ...inputs,\n//       [name]: value\n//     }));\n//   }, []);\n//   const [users, setUsers] = useState([\n//     {\n//       id: 1,\n//       username: 'velopert',\n//       email: 'public.velopert@gmail.com',\n//       active: true\n//     },\n//     {\n//       id: 2,\n//       username: 'tester',\n//       email: 'tester@example.com',\n//       active: false\n//     },\n//     {\n//       id: 3,\n//       username: 'liz',\n//       email: 'liz@example.com',\n//       active: false\n//     }\n//   ]);\n//   const nextId = useRef(4);\n//   const onCreate = useCallback(() => {\n//     const user = {\n//       id: nextId.current,\n//       username,\n//       email\n//     };\n//     setUsers(users => users.concat(user));\n//     setInputs({\n//       username: '',\n//       email: ''\n//     });\n//     nextId.current += 1;\n//   }, [username, email]);\n//   const onRemove = useCallback(id => {\n//     // user.id 가 파라미터로 일치하지 않는 원소만 추출해서 새로운 배열을 만듬\n//     // = user.id 가 id 인 것을 제거함\n//     setUsers(users => users.filter(user => user.id !== id));\n//   }, []);\n//   const onToggle = useCallback(id => {\n//     setUsers(users =>\n//       users.map(user =>\n//         user.id === id ? { ...user, active: !user.active } : user\n//       )\n//     );\n//   }, []);\n//   const count = useMemo(() => countActiveUsers(users), [users]);\n//   return (\n//     <>\n//       <CreateUser\n//         username={username}\n//         email={email}\n//         onChange={onChange}\n//         onCreate={onCreate}\n//       />\n//       <UserList users={users} onRemove={onRemove} onToggle={onToggle} />\n//       <div>활성사용자 수 : {count}</div>\n//     </>\n//   );\n// }\n\n\n_s(App2, \"mKxMQY135IKULBCG/JL6S5kvUWs=\");\n\n_c = App2;\nexport default App2;\n\nvar _c;\n\n$RefreshReg$(_c, \"App2\");","map":{"version":3,"names":["React","useRef","useState","useMemo","useCallback","useReducer","UserList","CreateUser","CreateUser2","UserList2","countActiveUsers","users","console","log","filter","user","active","length","initialState","inputs","username","email","id","reducer2","state","action","type","name","value","App2","dispatch","onChange","e","target"],"sources":["/Users/apple/Desktop/git-hub/react-begin/src/App2.js"],"sourcesContent":["import React, { useRef, useState, useMemo, useCallback, useReducer } from 'react';\nimport UserList from './UserList2';\nimport CreateUser from './CreateUser2';\nimport CreateUser2 from './CreateUser2';\nimport UserList2 from './UserList2';\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자 수를 세는중...');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  inputs: {\n    username: '',\n    email: ''\n  },\n  users: [\n    {\n      id: 1,\n      username: 'velopert',\n      email: 'public.velopert@gmail.com',\n      active: true\n    },\n    {\n      id: 2,\n      username: 'tester',\n      email: 'tester@example.com',\n      active: false\n    },\n    {\n      id: 3,\n      username: 'liz',\n      email: 'liz@example.com',\n      active: false\n    }\n  ]\n};\n\nfunction reducer2(state, action){\n  switch (action.type){\n    case 'CHANGE_INPUT':\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.name]: action.value\n        }\n      };\n    default:\n      return state;\n  }\n}\n\nfunction App2(){\n  const [state, dispatch] = useReducer(reducer2, initialState);\n  const { users } = state;\n  const { username, email } = state.inputs;\n\n  const onChange = useCallback(e => {\n    const { name, value } = e.target;\n    dispatch({\n      type: 'CHANGE_INPUT',\n      name,\n      value\n    });\n  }, []);\n\n  return (\n    <>\n      <CreateUser2 username={username} email={email} />\n      <UserList2 users={users}/>\n      <div>활성사용자 수 : 0</div>\n    </>\n  )\n}\n\n// function App2() {\n//   const [inputs, setInputs] = useState({\n//     username: '',\n//     email: ''\n//   });\n\n//   const { username, email } = inputs;\n\n//   const onChange = useCallback(e => {\n//     const { name, value } = e.target;\n//     setInputs(inputs => ({\n//       ...inputs,\n//       [name]: value\n//     }));\n//   }, []);\n\n//   const [users, setUsers] = useState([\n//     {\n//       id: 1,\n//       username: 'velopert',\n//       email: 'public.velopert@gmail.com',\n//       active: true\n//     },\n//     {\n//       id: 2,\n//       username: 'tester',\n//       email: 'tester@example.com',\n//       active: false\n//     },\n//     {\n//       id: 3,\n//       username: 'liz',\n//       email: 'liz@example.com',\n//       active: false\n//     }\n//   ]);\n\n//   const nextId = useRef(4);\n\n//   const onCreate = useCallback(() => {\n//     const user = {\n//       id: nextId.current,\n//       username,\n//       email\n//     };\n//     setUsers(users => users.concat(user));\n\n//     setInputs({\n//       username: '',\n//       email: ''\n//     });\n//     nextId.current += 1;\n//   }, [username, email]);\n\n//   const onRemove = useCallback(id => {\n//     // user.id 가 파라미터로 일치하지 않는 원소만 추출해서 새로운 배열을 만듬\n//     // = user.id 가 id 인 것을 제거함\n//     setUsers(users => users.filter(user => user.id !== id));\n//   }, []);\n//   const onToggle = useCallback(id => {\n//     setUsers(users =>\n//       users.map(user =>\n//         user.id === id ? { ...user, active: !user.active } : user\n//       )\n//     );\n//   }, []);\n//   const count = useMemo(() => countActiveUsers(users), [users]);\n//   return (\n//     <>\n//       <CreateUser\n//         username={username}\n//         email={email}\n//         onChange={onChange}\n//         onCreate={onCreate}\n//       />\n//       <UserList users={users} onRemove={onRemove} onToggle={onToggle} />\n//       <div>활성사용자 수 : {count}</div>\n//     </>\n//   );\n// }\n\nexport default App2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}