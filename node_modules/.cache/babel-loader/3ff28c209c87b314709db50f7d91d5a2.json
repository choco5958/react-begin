{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/git-hub/react-begin/src/App2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useMemo, useCallback } from 'react';\nimport UserList from './UserList2';\nimport CreateUser from './CreateUser2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자 수를 세는중...');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  inputs: {\n    username: '',\n    email: ''\n  },\n  users: [{\n    id: 1,\n    username: 'velopert',\n    email: 'public.velopert@gmail.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'tester',\n    email: 'tester@example.com',\n    active: false\n  }, {\n    id: 3,\n    username: 'liz',\n    email: 'liz@example.com',\n    active: false\n  }]\n};\n\nfunction App2() {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    username: '',\n    email: ''\n  });\n  const {\n    username,\n    email\n  } = inputs;\n  const onChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs(inputs => ({ ...inputs,\n      [name]: value\n    }));\n  }, []);\n  const [users, setUsers] = useState([{\n    id: 1,\n    username: 'velopert',\n    email: 'public.velopert@gmail.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'tester',\n    email: 'tester@example.com',\n    active: false\n  }, {\n    id: 3,\n    username: 'liz',\n    email: 'liz@example.com',\n    active: false\n  }]);\n  const nextId = useRef(4);\n  const onCreate = useCallback(() => {\n    const user = {\n      id: nextId.current,\n      username,\n      email\n    };\n    setUsers(users => users.concat(user));\n    setInputs({\n      username: '',\n      email: ''\n    });\n    nextId.current += 1;\n  }, [username, email]);\n  const onRemove = useCallback(id => {\n    // user.id 가 파라미터로 일치하지 않는 원소만 추출해서 새로운 배열을 만듬\n    // = user.id 가 id 인 것을 제거함\n    setUsers(users => users.filter(user => user.id !== id));\n  }, []);\n  const onToggle = useCallback(id => {\n    setUsers(users => users.map(user => user.id === id ? { ...user,\n      active: !user.active\n    } : user));\n  }, []);\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {\n      username: username,\n      email: email,\n      onChange: onChange,\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users,\n      onRemove: onRemove,\n      onToggle: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uD65C\\uC131\\uC0AC\\uC6A9\\uC790 \\uC218 : \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App2, \"D8dREK3nfh65JEcVLWxRQYzT77c=\");\n\n_c = App2;\nexport default App2;\n\nvar _c;\n\n$RefreshReg$(_c, \"App2\");","map":{"version":3,"names":["React","useRef","useState","useMemo","useCallback","UserList","CreateUser","countActiveUsers","users","console","log","filter","user","active","length","initialState","inputs","username","email","id","App2","setInputs","onChange","e","name","value","target","setUsers","nextId","onCreate","current","concat","onRemove","onToggle","map","count"],"sources":["/Users/apple/Desktop/git-hub/react-begin/src/App2.js"],"sourcesContent":["import React, { useRef, useState, useMemo, useCallback } from 'react';\nimport UserList from './UserList2';\nimport CreateUser from './CreateUser2';\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자 수를 세는중...');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  inputs: {\n    username: '',\n    email: ''\n  },\n  users: [\n    {\n      id: 1,\n      username: 'velopert',\n      email: 'public.velopert@gmail.com',\n      active: true\n    },\n    {\n      id: 2,\n      username: 'tester',\n      email: 'tester@example.com',\n      active: false\n    },\n    {\n      id: 3,\n      username: 'liz',\n      email: 'liz@example.com',\n      active: false\n    }\n  ]\n};\n\nfunction App2() {\n  const [inputs, setInputs] = useState({\n    username: '',\n    email: ''\n  });\n\n  const { username, email } = inputs;\n\n  const onChange = useCallback(e => {\n    const { name, value } = e.target;\n    setInputs(inputs => ({\n      ...inputs,\n      [name]: value\n    }));\n  }, []);\n\n  const [users, setUsers] = useState([\n    {\n      id: 1,\n      username: 'velopert',\n      email: 'public.velopert@gmail.com',\n      active: true\n    },\n    {\n      id: 2,\n      username: 'tester',\n      email: 'tester@example.com',\n      active: false\n    },\n    {\n      id: 3,\n      username: 'liz',\n      email: 'liz@example.com',\n      active: false\n    }\n  ]);\n\n  const nextId = useRef(4);\n\n  const onCreate = useCallback(() => {\n    const user = {\n      id: nextId.current,\n      username,\n      email\n    };\n    setUsers(users => users.concat(user));\n\n    setInputs({\n      username: '',\n      email: ''\n    });\n    nextId.current += 1;\n  }, [username, email]);\n\n  const onRemove = useCallback(id => {\n    // user.id 가 파라미터로 일치하지 않는 원소만 추출해서 새로운 배열을 만듬\n    // = user.id 가 id 인 것을 제거함\n    setUsers(users => users.filter(user => user.id !== id));\n  }, []);\n  const onToggle = useCallback(id => {\n    setUsers(users =>\n      users.map(user =>\n        user.id === id ? { ...user, active: !user.active } : user\n      )\n    );\n  }, []);\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return (\n    <>\n      <CreateUser\n        username={username}\n        email={email}\n        onChange={onChange}\n        onCreate={onCreate}\n      />\n      <UserList users={users} onRemove={onRemove} onToggle={onToggle} />\n      <div>활성사용자 수 : {count}</div>\n    </>\n  );\n}\n\nexport default App2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}