{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/git-hub/react-begin/src/Immer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useMemo } from 'react';\nimport UserList from './UserList2';\nimport CreateUser from './CreateUser2';\nimport produce from 'immer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자 수를 세는중...');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  users: [{\n    id: 1,\n    username: 'velopert',\n    email: 'public.velopert@gmail.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'tester',\n    email: 'tester@example.com',\n    active: false\n  }, {\n    id: 3,\n    username: 'liz',\n    email: 'liz@example.com',\n    active: false\n  }]\n};\n\nfunction reducer3(state, action) {\n  switch (action.type) {\n    case 'CREATE_USER':\n      return produce(state, draft => {\n        draft.users.push(action.user);\n      });\n\n    case 'TOGGLE_USER':\n      return produce(state, draft => {\n        const user = draft.users.find(user => user.id === action.id);\n        user.active = !user.active;\n      });\n\n    case 'REMOVE_USER':\n      return produce(state, draft => {\n        const index = draft.users.findIndex(user => user.id === action.id);\n        draft.users.splice(index, 1);\n      });\n\n    default:\n      return state;\n  }\n} // UserDispatch 라는 이름으로 내보내줍니다.\n\n\nexport const UserDispatch = /*#__PURE__*/React.createContext(null);\nconst todo2 = {\n  text: 'Hello',\n  done: false\n};\nconst updater2 = produce(draft => {\n  draft.done = !draft.done;\n});\nconst nextTodo2 = updater(todo);\nconsole.log(nextTodo2); // { text: 'Hello', done: true }\n\nfunction Immer() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer3, initialState);\n  const {\n    users\n  } = state;\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return /*#__PURE__*/_jsxDEV(UserDispatch.Provider, {\n    value: dispatch,\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uD65C\\uC131\\uC0AC\\uC6A9\\uC790 \\uC218 : \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Immer, \"/ghbGCYVKieBqgBU4a8zTtJw+rA=\");\n\n_c = Immer;\nexport default Immer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Immer\");","map":{"version":3,"names":["React","useReducer","useMemo","UserList","CreateUser","produce","countActiveUsers","users","console","log","filter","user","active","length","initialState","id","username","email","reducer3","state","action","type","draft","push","find","index","findIndex","splice","UserDispatch","createContext","todo2","text","done","updater2","nextTodo2","updater","todo","Immer","dispatch","count"],"sources":["/Users/apple/Desktop/git-hub/react-begin/src/Immer.js"],"sourcesContent":["import React, { useReducer, useMemo } from 'react';\nimport UserList from './UserList2';\nimport CreateUser from './CreateUser2';\nimport produce from 'immer';\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자 수를 세는중...');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  users: [\n    {\n      id: 1,\n      username: 'velopert',\n      email: 'public.velopert@gmail.com',\n      active: true\n    },\n    {\n      id: 2,\n      username: 'tester',\n      email: 'tester@example.com',\n      active: false\n    },\n    {\n      id: 3,\n      username: 'liz',\n      email: 'liz@example.com',\n      active: false\n    }\n  ]\n};\n\nfunction reducer3(state, action) {\n  switch (action.type) {\n    case 'CREATE_USER':\n      return produce(state, draft => {\n        draft.users.push(action.user);\n      });\n    case 'TOGGLE_USER':\n      return produce(state, draft => {\n        const user = draft.users.find(user => user.id === action.id);\n        user.active = !user.active;\n      });\n    case 'REMOVE_USER':\n      return produce(state, draft => {\n        const index = draft.users.findIndex(user => user.id === action.id);\n        draft.users.splice(index, 1);\n      });\n    default:\n      return state;\n  }\n}\n\n// UserDispatch 라는 이름으로 내보내줍니다.\nexport const UserDispatch = React.createContext(null);\n\n\nconst todo2 = {\n  text: 'Hello',\n  done: false\n};\n\nconst updater2 = produce(draft => {\n  draft.done = !draft.done;\n});\n\nconst nextTodo2 = updater(todo);\n\nconsole.log(nextTodo2);\n// { text: 'Hello', done: true }\n\nfunction Immer() {\n  const [state, dispatch] = useReducer(reducer3, initialState);\n\n  const { users } = state;\n\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return (\n    <UserDispatch.Provider value={dispatch}>\n      <CreateUser />\n      <UserList users={users} />\n      <div>활성사용자 수 : {count}</div>\n    </UserDispatch.Provider>\n  );\n}\n\nexport default Immer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}