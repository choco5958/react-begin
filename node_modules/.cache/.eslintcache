[{"/Users/apple/Desktop/git-hub/react-begin/src/index.js":"1","/Users/apple/Desktop/git-hub/react-begin/src/reportWebVitals.js":"2","/Users/apple/Desktop/git-hub/react-begin/src/App.js":"3","/Users/apple/Desktop/git-hub/react-begin/src/App2.js":"4","/Users/apple/Desktop/git-hub/react-begin/src/Counter2.js":"5","/Users/apple/Desktop/git-hub/react-begin/src/InputSample2.js":"6","/Users/apple/Desktop/git-hub/react-begin/src/Counter.js":"7","/Users/apple/Desktop/git-hub/react-begin/src/InputSample.js":"8","/Users/apple/Desktop/git-hub/react-begin/src/Wrapper.js":"9","/Users/apple/Desktop/git-hub/react-begin/src/UserList.js":"10","/Users/apple/Desktop/git-hub/react-begin/src/Hello.js":"11","/Users/apple/Desktop/git-hub/react-begin/src/UserList2.js":"12","/Users/apple/Desktop/git-hub/react-begin/src/CreateUser2.js":"13","/Users/apple/Desktop/git-hub/react-begin/src/hooks/useInputs.js":"14","/Users/apple/Desktop/git-hub/react-begin/src/immer.js":"15","/Users/apple/Desktop/git-hub/react-begin/src/Immer.js":"16","/Users/apple/Desktop/git-hub/react-begin/src/Hello2.js":"17","/Users/apple/Desktop/git-hub/react-begin/src/Counter3.js":"18"},{"size":767,"mtime":1653557587552,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1651648678417,"results":"21","hashOfConfig":"20"},{"size":1559,"mtime":1653473262722,"results":"22","hashOfConfig":"20"},{"size":5513,"mtime":1653543305750,"results":"23","hashOfConfig":"20"},{"size":637,"mtime":1653533321352,"results":"24","hashOfConfig":"20"},{"size":1156,"mtime":1651656255254,"results":"25","hashOfConfig":"20"},{"size":491,"mtime":1651655158943,"results":"26","hashOfConfig":"20"},{"size":498,"mtime":1651655866016,"results":"27","hashOfConfig":"20"},{"size":258,"mtime":1651653247911,"results":"28","hashOfConfig":"20"},{"size":1789,"mtime":1653471806751,"results":"29","hashOfConfig":"20"},{"size":373,"mtime":1651654306035,"results":"30","hashOfConfig":"20"},{"size":2165,"mtime":1653554972393,"results":"31","hashOfConfig":"20"},{"size":476,"mtime":1653530459499,"results":"32","hashOfConfig":"20"},{"size":443,"mtime":1653542054758,"results":"33","hashOfConfig":"20"},{"size":2020,"mtime":1653556109941,"results":"34","hashOfConfig":"20"},{"size":2020,"mtime":1653556109941,"results":"35","hashOfConfig":"20"},{"size":436,"mtime":1653556029924,"results":"36","hashOfConfig":"20"},{"size":1727,"mtime":1653557018580,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"1rb9tfc",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/apple/Desktop/git-hub/react-begin/src/index.js",["98","99","100","101"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport App2 from './App2'\nimport Counter2 from './Counter2';\nimport Immer from './Immer';\nimport reportWebVitals from './reportWebVitals';\nimport Hello2 from './Hello2';\nimport Counter3 from './Counter3';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <>\n    {/* <App /> */}\n    {/* <App2/> */}\n    {/* <Counter2 /> */}\n    {/* <Immer/> */}\n    <Hello2/>\n    <Counter3/>\n    </>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/apple/Desktop/git-hub/react-begin/src/reportWebVitals.js",[],[],"/Users/apple/Desktop/git-hub/react-begin/src/App.js",[],[],"/Users/apple/Desktop/git-hub/react-begin/src/App2.js",["102","103"],[],"import React, { useRef, useState, useMemo, useCallback, useReducer } from 'react';\nimport UserList from './UserList2';\nimport CreateUser from './CreateUser2';\nimport useInputs from './hooks/useInputs';\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자 수를 세는중...');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  inputs: {\n    username: '',\n    email: ''\n  },\n  users: [\n    {\n      id: 1,\n      username: 'velopert',\n      email: 'public.velopert@gmail.com',\n      active: true\n    },\n    {\n      id: 2,\n      username: 'tester',\n      email: 'tester@example.com',\n      active: false\n    },\n    {\n      id: 3,\n      username: 'liz',\n      email: 'liz@example.com',\n      active: false\n    }\n  ]\n};\n\nfunction reducer2(state, action) {\n  switch (action.type) {\n    case 'CREATE_USER':\n      return {\n        users: state.users.concat(action.user)\n      };\n    case 'TOGGLE_USER':\n      return {\n        users: state.users.map(user =>\n          user.id === action.id ? { ...user, active: !user.active } : user\n        )\n      };\n    case 'REMOVE_USER':\n      return {\n        users: state.users.filter(user => user.id !== action.id)\n      };\n    default:\n      return state;\n  }\n}\n\n// function reducer2(state, action){\n//   switch (action.type){\n//     case 'CHANGE_INPUT':\n//       return {\n//         ...state,\n//         inputs: {\n//           ...state.inputs,\n//           [action.name]: action.value\n//         }\n//       };\n//     case 'CREATE_USER':\n//       return {\n//         inputs: initialState.inputs,\n//         users: state.users.concat(action.user)\n//       };\n//     case 'TOGGLE_USER':\n//       return{\n//         ...state,\n//         users: state.users.map(user =>\n//           user.id === action.id ? { ...user, active: !user.active } : user\n//         )\n//       };\n//     case 'REMOVE_USER':\n//       return{\n//         ...state,\n//         users: state.users.filter(user => user.id !== action.id)\n//       };\n//     default:\n//       return state;\n//   }\n// }\n\n// UserDispatch 라는 이름으로 내보내줍니다.\nexport const UserDispatch = React.createContext(null);\n\nfunction App2() {\n  //커스텀 hook 사용시\n  const [{username, email}, onChange, reset] = useInputs({\n    username: '',\n    email: ''\n  });\n  const [state, dispatch] = useReducer(reducer2, initialState);\n  const nextId = useRef(4);\n\n  const { users } = state;\n\n  // const { username, email } = state.inputs;\n  // const onChange = useCallback(e => {\n  //   const { name, value } = e.target;\n  //   dispatch({\n  //     type: 'CHANGE_INPUT',\n  //     name,\n  //     value\n  //   });\n  // }, []);\n\n  const onCreate = useCallback(() => {\n    dispatch({\n      type: 'CREATE_USER',\n      user: {\n        id: nextId.current,\n        username,\n        email\n      }\n    });\n    reset();\n    nextId.current += 1;\n  }, [username, email]);\n\n  const onToggle = useCallback(id => {\n    dispatch({\n      type: 'TOGGLE_USER',\n      id\n    });\n  }, []);\n\n  const onRemove = useCallback(id => {\n    dispatch({\n      type: 'REMOVE_USER',\n      id\n    });\n  }, []);\n\n  const count = useMemo(() => countActiveUsers(users), [users]);\n\n  return (\n    <UserDispatch.Provider value={dispatch}>\n      <CreateUser\n        username={username}\n        email={email}\n        onChange={onChange}\n        onCreate={onCreate}\n      />\n      <UserList users={users} onToggle={onToggle} onRemove={onRemove} />\n      <div>활성사용자 수 : {count}</div>\n    </UserDispatch.Provider>\n  );\n}\n\n// function App2() {\n//   const [inputs, setInputs] = useState({\n//     username: '',\n//     email: ''\n//   });\n\n//   const { username, email } = inputs;\n\n//   const onChange = useCallback(e => {\n//     const { name, value } = e.target;\n//     setInputs(inputs => ({\n//       ...inputs,\n//       [name]: value\n//     }));\n//   }, []);\n\n//   const [users, setUsers] = useState([\n//     {\n//       id: 1,\n//       username: 'velopert',\n//       email: 'public.velopert@gmail.com',\n//       active: true\n//     },\n//     {\n//       id: 2,\n//       username: 'tester',\n//       email: 'tester@example.com',\n//       active: false\n//     },\n//     {\n//       id: 3,\n//       username: 'liz',\n//       email: 'liz@example.com',\n//       active: false\n//     }\n//   ]);\n\n//   const nextId = useRef(4);\n\n//   const onCreate = useCallback(() => {\n//     const user = {\n//       id: nextId.current,\n//       username,\n//       email\n//     };\n//     setUsers(users => users.concat(user));\n\n//     setInputs({\n//       username: '',\n//       email: ''\n//     });\n//     nextId.current += 1;\n//   }, [username, email]);\n\n//   const onRemove = useCallback(id => {\n//     // user.id 가 파라미터로 일치하지 않는 원소만 추출해서 새로운 배열을 만듬\n//     // = user.id 가 id 인 것을 제거함\n//     setUsers(users => users.filter(user => user.id !== id));\n//   }, []);\n//   const onToggle = useCallback(id => {\n//     setUsers(users =>\n//       users.map(user =>\n//         user.id === id ? { ...user, active: !user.active } : user\n//       )\n//     );\n//   }, []);\n//   const count = useMemo(() => countActiveUsers(users), [users]);\n//   return (\n//     <>\n//       <CreateUser\n//         username={username}\n//         email={email}\n//         onChange={onChange}\n//         onCreate={onCreate}\n//       />\n//       <UserList users={users} onRemove={onRemove} onToggle={onToggle} />\n//       <div>활성사용자 수 : {count}</div>\n//     </>\n//   );\n// }\n\nexport default App2;\n",[],"/Users/apple/Desktop/git-hub/react-begin/src/Counter2.js",[],[],"/Users/apple/Desktop/git-hub/react-begin/src/InputSample2.js",[],[],"/Users/apple/Desktop/git-hub/react-begin/src/Counter.js",[],[],"/Users/apple/Desktop/git-hub/react-begin/src/InputSample.js",[],[],"/Users/apple/Desktop/git-hub/react-begin/src/Wrapper.js",[],[],"/Users/apple/Desktop/git-hub/react-begin/src/UserList.js",["104"],[],"/Users/apple/Desktop/git-hub/react-begin/src/Hello.js",[],[],"/Users/apple/Desktop/git-hub/react-begin/src/UserList2.js",["105"],[],"import React, { useContext, useEffect } from 'react';\n// import { UserDispatch } from './App2';\nimport { UserDispatch } from './Immer';\n\n\nconst User = React.memo(function User({ user, onRemove, onToggle }) {\n  // useEffect(() => {\n  //   console.log('컴포넌트가 화면에 나타남');\n  //   return () => {\n  //     console.log('컴포넌트가 화면에서 사라짐');\n  //   };\n  // }, []);\n\n  // useEffect(() => {\n  //   console.log('user 값이 설정됨');\n  //   console.log(user);\n  //   return () => {\n  //     console.log('user 가 바뀌기 전..');\n  //     console.log(user);\n  //   };\n  // }, [user]);\n\n  // useEffect(() => {\n  //   console.log(user);\n  // });\n\n  \n  // return (\n  //   <div>\n  //     <b\n  //       style={{\n  //         cursor: 'pointer',\n  //         color: user.active ? 'green' : 'black'\n  //       }}\n  //       onClick={() => onToggle(user.id)}\n  //     >\n  //       {user.username}\n  //     </b>\n  //     &nbsp;\n  //     <span>({user.email})</span>\n  //     <button onClick={() => onRemove(user.id)}>삭제</button>\n  //   </div>\n  // );\n\n// function UserList2({ users, onRemove, onToggle }) {\n//   return (\n//     <div>\n//       {users.map(user => (\n//         <User \n//           user={user}\n//           key={user.id}\n//           onRemove={onRemove}\n//           onToggle={onToggle} \n//         />\n//       ))}\n//     </div>\n//   );\n// }\n\n  //CONTEXT API를 사용하여 컴포넌트 전달하는 작업 최소화\n  const dispatch = useContext(UserDispatch);\n\n  return (\n    <div>\n      <b\n        style={{\n          cursor: 'pointer',\n          color: user.active ? 'green' : 'black'\n        }}\n        onClick={() => {\n          dispatch({type: 'TOGGLE_USER', id: user.id});\n        }}\n      >\n        {user.username}\n      </b>\n      &nbsp;\n      <span>({user.email})</span>\n      <button \n        onClick={() => {\n          dispatch({type: 'REMOVE_USER', id: user.id});\n        }}\n      >삭제</button>\n    </div>\n  );\n});\n\n\nfunction UserList2({ users }) {\n  return (\n    <div>\n      {users.map(user => (\n        <User user={user} key={user.id} />\n      ))}\n    </div>\n  );\n}\n\nexport default React.memo(UserList2);","/Users/apple/Desktop/git-hub/react-begin/src/CreateUser2.js",[],[],"/Users/apple/Desktop/git-hub/react-begin/src/hooks/useInputs.js",["106"],[],"import React, { useCallback, useState } from \"react\";\n\nfunction useInputs(initialForm){\n    const [form, setForm] = useState(initialForm);\n    \n    //change\n    const onChange = useCallback(e => {\n        const { name, value } = e.target;\n        setForm(form => ({...form, [name]: value}));\n    }, []);\n\n    const reset = useCallback(() => setForm(initialForm), [initialForm]);\n    return [form, onChange, reset];\n}\n\nexport default useInputs;","/Users/apple/Desktop/git-hub/react-begin/src/immer.js",["107","108","109"],[],"import React from \"react\";\n\nfunction immerTest(){\n\n    //리액트는 불변성을 유지해야한다.\n    const todos = [\n        {\n          id: 1,\n          text: '할 일 #1',\n          done: true\n        },\n        {\n          id: 2,\n          text: '할 일 #2',\n          done: false\n        }\n      ];\n      \n      const inserted = todos.concat({\n        id: 3,\n        text: '할 일 #3',\n        done: false\n      });\n      \n      const filtered = todos.filter(todo => todo.id !== 2);\n      \n      const toggled = todos.map(\n        todo => todo.id === 2\n          ? {\n            ...todo,\n            done: !todo.done,\n          }\n          : todo\n      );\n\n    return(\n        <div>\n\n        </div>\n    );\n}\n\nexport default immerTest;","/Users/apple/Desktop/git-hub/react-begin/src/Immer.js",["110"],[],"/Users/apple/Desktop/git-hub/react-begin/src/Hello2.js",[],[],"/Users/apple/Desktop/git-hub/react-begin/src/Counter3.js",[],[],{"ruleId":"111","severity":1,"message":"112","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":11},{"ruleId":"111","severity":1,"message":"115","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":12},{"ruleId":"111","severity":1,"message":"116","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":16},{"ruleId":"111","severity":1,"message":"117","line":7,"column":8,"nodeType":"113","messageId":"114","endLine":7,"endColumn":13},{"ruleId":"111","severity":1,"message":"118","line":1,"column":25,"nodeType":"113","messageId":"114","endLine":1,"endColumn":33},{"ruleId":"119","severity":1,"message":"120","line":126,"column":6,"nodeType":"121","endLine":126,"endColumn":23,"suggestions":"122"},{"ruleId":"111","severity":1,"message":"123","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":23},{"ruleId":"111","severity":1,"message":"124","line":1,"column":29,"nodeType":"113","messageId":"114","endLine":1,"endColumn":38},{"ruleId":"111","severity":1,"message":"125","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":13},{"ruleId":"111","severity":1,"message":"126","line":19,"column":13,"nodeType":"113","messageId":"114","endLine":19,"endColumn":21},{"ruleId":"111","severity":1,"message":"127","line":25,"column":13,"nodeType":"113","messageId":"114","endLine":25,"endColumn":21},{"ruleId":"111","severity":1,"message":"128","line":27,"column":13,"nodeType":"113","messageId":"114","endLine":27,"endColumn":20},{"ruleId":"111","severity":1,"message":"129","line":69,"column":7,"nodeType":"113","messageId":"114","endLine":69,"endColumn":16},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'App2' is defined but never used.","'Counter2' is defined but never used.","'Immer' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'reset'. Either include it or remove the dependency array.","ArrayExpression",["130"],"'useRef' is defined but never used.","'useEffect' is defined but never used.","'React' is defined but never used.","'inserted' is assigned a value but never used.","'filtered' is assigned a value but never used.","'toggled' is assigned a value but never used.","'nextTodo2' is assigned a value but never used.",{"desc":"131","fix":"132"},"Update the dependencies array to be: [username, email, reset]",{"range":"133","text":"134"},[2810,2827],"[username, email, reset]"]